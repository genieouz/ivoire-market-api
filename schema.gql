# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type ImageSizes {
  sm: ID
  md: ID
  lg: ID
}

enum InternalRole {
  STRATEGIC
  FINANCE
  MARKETING
  STANDARD
}

input LoginDto {
  email: String!
  password: String!
}

type Mutation {
  updateCurrentUserPassword(newPassword: String!, oldPassword: String!): Boolean!
  closeAccount: Boolean!
  register(registerInput: RegisterDto!): SessionEntity!
  updatePassword(updatePasswordDto: UpdatePasswordDto!): Boolean!
}

type Paging {
  recordsLength: Float!
  totalRecords: Float!
  offset: Float!
  limit: Float!
  pages: Float!
  currentPage: Float!
}

type Query {
  fetchCurrentUser: UserEntity!
  fetchAdmins: UsersEntity!
  fetchClients: UsersEntity!
  login(loginInput: LoginDto!): SessionEntity!
  resetPassword(email: String!): String!
}

input RegisterDto {
  phoneNumber: String!
  lastName: String!
  firstName: String!
  password: String!
  email: String!
  birthDate: DateTime!
  gender: String!
  city: String!
  district: String!
}

type SessionEntity {
  token: String!
  user: UserEntity!
}

input UpdatePasswordDto {
  password: String!
  resetToken: String!
  resetCode: Float!
}

input UserDto {
  countryCode: String!
  role: UserRoles!
  gender: UserGender!
  birthDate: DateTime!
  phoneNumber: String!
  lastName: String!
  firstName: String!
  email: String!
  internalRole: InternalRole!
}

type UserEntity {
  _id: ID!
  countryCode: String
  role: UserRoles!
  internalRole: InternalRole
  gender: UserGender
  birthDate: DateTime
  phoneNumber: String
  lastName: String!
  firstName: String!
  password: String!
  email: String!
  avatar: ImageSizes
  city: String
  district: String
}

enum UserGender {
  MALE
  FEMALE
}

enum UserRoles {
  USER
  ADMIN
  ORGANIZER
}

type UsersEntity {
  recordsLength: Float!
  totalRecords: Float!
  offset: Float!
  limit: Float!
  pages: Float!
  currentPage: Float!
  records: [UserEntity!]!
}
